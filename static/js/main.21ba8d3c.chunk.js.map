{"version":3,"sources":["Api/index.js","containers/Answers.js","containers/buttons.js","components/App.js","index.js"],"names":["Questions","question","answerIndex","answers","content","answer","Answers","props","className","map","index","key","onClick","select","value","active","Buttons","handlerClickStartTest","begin","nextQuestion","resultButton","handlerClickResult","App","useState","quizQuestions","allQuestions","setQuestion","setAnswers","correctAnswer","setCorrectAnswer","count","setCount","setBegin","selectedAnswers","setSelectedAnswers","activeAnswer","setActiveAnswer","setResultButton","result","setResult","startTime","setStartTime","totalQuestions","length","useEffect","e","preventDefault","target","time","Date","getTime","nowTime","hours","parseInt","minutes","seconds","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21ba8d3c.chunk.js","sourcesContent":["const Questions = [\r\n    {\r\n        question: \"Первый этап построения алгоритмов\",\r\n        answerIndex: 2,\r\n        answers: [\r\n            {\r\n                content: \"разработка модели\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"написание программного кода\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"постановка задач\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"тестирование программы\",\r\n                answer: false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"Алгоритм – это\",\r\n        answerIndex: 2,\r\n        answers: [\r\n            {\r\n                content: \"правила выполнения определенных действий\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"ориентированный граф, указывающий порядок выполнения некоторого набора команд\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"описание последовательности действий, строгое исполнение которых приводит к решению поставленной задачи за конечное число шагов\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"набор команд для компьютера\",\r\n                answer: false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"Алгоритм называется линейным, если\",\r\n        answerIndex: 2,\r\n        answers: [\r\n            {\r\n                content: \"он составлен так, что его выполнение предполагает многократное повторение одних и тех же действий\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"ход его выполнения зависит от истинности тех или иных условий\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"его команды выполняются в порядке их естественного следования друг за другом независимо от каких-либо условий\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"он представим в табличной форме\",\r\n                answer: false,\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        question: \"Алгоритм называется циклическим, если\",\r\n        answerIndex: 0,\r\n        answers: [\r\n            {\r\n                content: \"он составлен так, что его выполнение предполагает многократное повторение одних и тех же действий\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"ход его выполнения зависит от истинности тех или иных условий\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"его команды выполняются в порядке их естественного следования друг за другом независимо от каких-либо условий\",\r\n                answer: false,\r\n            },\r\n            {\r\n                content: \"он представим в табличной форме\",\r\n                answer: false,\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default Questions","import React from 'react'\r\n\r\nconst Answers = (props) => {\r\n    return (\r\n        <div className=\"answers\">\r\n        {\r\n          props.answers.map((answer, index) => {\r\n            return (\r\n              \r\n              <button key={index} onClick={props.select} value={index} className={props.active === index ? 'active' : ''}>{answer.content}</button>  \r\n              \r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Answers","import React from 'react'\r\n\r\nconst Buttons = (props) => {\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button onClick={props.handlerClickStartTest} \r\n                    className={!props.begin ? \"active\" :  \"hidden\" }>Начать тест</button>\r\n\r\n            <button onClick={props.nextQuestion} \r\n                    className={!props.begin ? \"hidden\" : \"nextBtn active\" }>Следующий вопрос</button>\r\n\r\n        <div className={!props.resultButton ? 'hidden' : 'button_result_bLock active'}>\r\n            <button onClick={props.handlerClickResult} >Результат</button>\r\n        </div>       \r\n   \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Buttons","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport quizQuestions from '../Api'\nimport Answers from '../containers/Answers'\nimport Buttons from '../containers/buttons'\n\n\nconst App = () => {\n  const [allQuestions, setQuestions] = useState(quizQuestions)\n  const [question, setQuestion] = useState('')\n  const [answers, setAnswers] = useState([])\n  const [correctAnswer, setCorrectAnswer] = useState()\n  const [count, setCount] = useState(0)\n  const [begin, setBegin] = useState(false)\n  const [selectedAnswers, setSelectedAnswers] = useState([])\n  const [activeAnswer, setActiveAnswer] = useState(null)\n  const [resultButton, setResultButton] = useState(false)\n  const [result, setResult] = useState(null)\n  const [startTime, setStartTime] = useState({})\n  const totalQuestions = allQuestions.length\n\n\n  useEffect(() => {\n    setQuestion(allQuestions[count].question)\n    setAnswers(allQuestions[count].answers)\n    setCorrectAnswer(allQuestions[count].answerIndex)\n  }, )\n \n  const handlerClickStartTest = (e) => {\n    e.preventDefault()\n    setBegin(true)\n    const time = new Date().getTime()\n    setStartTime({\n      time: time,\n    })\n   \n  }\n\n  const nextQuestion = (e) => {\n    e.preventDefault()\n    if (activeAnswer === correctAnswer) {\n      setSelectedAnswers([activeAnswer, ...selectedAnswers])\n    }\n    if(activeAnswer != null && count !== (totalQuestions - 1)) {\n      setCount( count + 1)\n      setActiveAnswer(null)\n    } else if (activeAnswer != null && count === (totalQuestions - 1) )  {\n      setActiveAnswer(null)\n      setResultButton(true)\n      const nowTime = new Date().getTime() - startTime.time\n      setStartTime({\n        time: nowTime,\n        hours: parseInt((nowTime / (1000 * 60 * 60)) % 24),\n        minutes: parseInt((nowTime / (1000 * 60)) % 60),\n        seconds:   parseInt((nowTime/ 1000) % 60),\n      })\n    }\n     \n    } \n    \n    const handlerClickResult = () => {\n      setResult(true)\n    }\n\n\n  const selectAnswer = (e) => {\n    e.preventDefault()\n    const active = +e.target.value\n    setActiveAnswer(active)\n  }\n\n  return (\n   <div className=\"test-container\">\n     <h1>Алгоритмизация</h1>\n     {\n       !begin ? \n       <h3>Нажмите \"Начать тест\", чтобы приступить к выполнению</h3>\n      :\n      <div className=\"questions\">\n      <div className=\"counter\">\n        <span>Вопрос {count + 1} из {totalQuestions}</span> \n      </div>\n      <h2>{question}</h2>\n      <Answers answers={answers} \n               select={selectAnswer} \n               active={activeAnswer}\n               />\n     </div> \n     }\n    \n    <Buttons handlerClickStartTest={handlerClickStartTest} \n             nextQuestion={nextQuestion} \n             begin={begin} \n             resultButton={resultButton} \n             handlerClickResult={handlerClickResult}/>\n    <div className={!result ? 'hidden' : 'popup-result active'}>\n      <h3>Результат</h3>\n      <h2>{selectedAnswers.length > 2 ? \"Тест пройден\" : \"Тест не пройден\"} </h2>\n      <div>\n        <ul>\n          <li>Количество правильных ответов: {selectedAnswers.length}</li>\n    <li>Потраченное время:  \n        {startTime.hours < 10 ? \"0\" + startTime.hours : startTime.hours } \n        : \n        {startTime.minutes < 10 ? \"0\" + startTime.minutes : startTime.minutes}\n        : \n        {startTime.seconds < 10 ? \"0\" + startTime.seconds : startTime.seconds} </li>\n        </ul>\n      </div>\n    </div>\n   </div> \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}